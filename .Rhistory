content = c("10th Standard - Sainik School Amaravathinagar",
"12th Standard - Sainik School Amaravathinagar",
"PharmD - Vinayaka Missions College of Pharmacy",
"MSc Drug Discovery & Toxicology - University of Hertfordshire"),
start   = c("2013-06-01", "2015-06-01", "2015-08-01", "2022-09-01"),
end     = c(NA, NA, "2021-08-01", "2024-09-01")
)
# Define your education timeline data
education_data <- data.frame(
id      = 1:4,
content = c("10th Standard - Sainik School Amaravathinagar",
"12th Standard - Sainik School Amaravathinagar",
"PharmD - Vinayaka Missions College of Pharmacy",
"MSc Drug Discovery & Toxicology - University of Hertfordshire"),
start   = c("2013-06-01", "2015-06-01", "2015-08-01", "2022-09-01"),
end     = c(NA, NA, "2021-08-01", "2024-09-01")
)
# Create the timeline
timevis(education_data, showZoom = FALSE)
# Create the timeline
timevis(education_data, showZoom = TRUE)
# Load the Shiny library
library(shiny)
# Define UI
ui <- fluidPage(
# Application title
titlePanel("My Education Grades"),
# Sidebar layout with input and output
sidebarLayout(
# Sidebar with a checkbox input for selecting education levels
sidebarPanel(
checkboxGroupInput("education", "Select Education:",
choices = list(
"10th Standard - Sainik School" = "10th",
"12th Standard - Sainik School" = "12th",
"PharmD - Vinayaka Missions College" = "PharmD",
"MSc Drug Discovery & Toxicology - University of Hertfordshire" = "MSc"),
selected = "10th")  # Default selected
),
# Main panel for displaying plots
mainPanel(
plotOutput("gradePlot")  # Plot output to show grade data
)
)
)
# Define server logic required to draw the plot
server <- function(input, output) {
# Data: Grades in different education stages
grades_data <- data.frame(
Education = c("10th", "12th", "PharmD", "MSc"),
Year = c(2013, 2015, 2021, 2024),
Grades = c(85, 88, 92, 95)  # Example grades, you can adjust based on your data
)
# Render the plot based on the selected education
output$gradePlot <- renderPlot({
# Filter the data based on selected education levels
selected_data <- grades_data[grades_data$Education %in% input$education, ]
# Plot the grades
barplot(
selected_data$Grades,
names.arg = selected_data$Education,
col = "skyblue",
ylim = c(0, 100),
main = "Grades in Selected Education Levels",
xlab = "Education",
ylab = "Grades (%)",
border = "white"
)
})
}
# Run the application
shinyApp(ui = ui, server = server)
# Load the required libraries
library(shiny)
# Define UI
ui <- fluidPage(
# Title for the app
titlePanel("Education Grades"),
# Create a fluidRow for each section of the app
fluidRow(
# MSc DDT Section
column(2, strong("MSc DDT")),
column(10,
h4("A bar chart for different modules. I have 5 modules. Grades for each individual module out of 4.5"),
plotOutput("MScPlot")  # Placeholder for MSc grades chart
)
),
hr(),  # Horizontal line
fluidRow(
# Pharm D Section
column(2, strong("Pharm D")),
column(10,
# Toggle for Year selection (1 to 5)
tabsetPanel(
tabPanel("Year 1", plotOutput("PharmDYear1Plot")),
tabPanel("Year 2", plotOutput("PharmDYear2Plot")),
tabPanel("Year 3", plotOutput("PharmDYear3Plot")),
tabPanel("Year 4", plotOutput("PharmDYear4Plot")),
tabPanel("Year 5", plotOutput("PharmDYear5Plot"))
),
h4("Toggle changes the grades and module names in this section. Each year has 4 modules, and I need a bar chart for each module with theory and practical groups.")
)
),
hr(),  # Horizontal line
fluidRow(
# Class XII Section
column(2, strong("Class XII")),
column(10,
h4("Each year has 4 modules and I need a bar chart for each module with theory and practical groups"),
plotOutput("Class12Plot")  # Placeholder for Class XII grades chart
)
)
)
# Define server logic
server <- function(input, output) {
# Placeholder plot for MSc DDT (5 modules)
output$MScPlot <- renderPlot({
# Replace this with your actual grades data later
barplot(c(3.5, 4.0, 3.8, 4.2, 4.1),
names.arg = paste("Module", 1:5),
col = "lightblue",
ylim = c(0, 4.5),
main = "MSc DDT Grades (Out of 4.5)")
})
# Placeholder plot for PharmD Year 1 (4 modules)
output$PharmDYear1Plot <- renderPlot({
barplot(c(75, 80, 85, 90),
names.arg = c("Module 1", "Module 2", "Module 3", "Module 4"),
col = "lightgreen",
ylim = c(0, 100),
main = "Pharm D - Year 1 Grades (Theory and Practical)")
})
# Placeholder plot for PharmD Year 2 (4 modules)
output$PharmDYear2Plot <- renderPlot({
barplot(c(70, 78, 82, 88),
names.arg = c("Module 1", "Module 2", "Module 3", "Module 4"),
col = "lightgreen",
ylim = c(0, 100),
main = "Pharm D - Year 2 Grades (Theory and Practical)")
})
# Placeholder plot for PharmD Year 3 (4 modules)
output$PharmDYear3Plot <- renderPlot({
barplot(c(78, 85, 87, 92),
names.arg = c("Module 1", "Module 2", "Module 3", "Module 4"),
col = "lightgreen",
ylim = c(0, 100),
main = "Pharm D - Year 3 Grades (Theory and Practical)")
})
# Placeholder plot for PharmD Year 4 (4 modules)
output$PharmDYear4Plot <- renderPlot({
barplot(c(80, 88, 90, 94),
names.arg = c("Module 1", "Module 2", "Module 3", "Module 4"),
col = "lightgreen",
ylim = c(0, 100),
main = "Pharm D - Year 4 Grades (Theory and Practical)")
})
# Placeholder plot for PharmD Year 5 (4 modules)
output$PharmDYear5Plot <- renderPlot({
barplot(c(85, 90, 88, 93),
names.arg = c("Module 1", "Module 2", "Module 3", "Module 4"),
col = "lightgreen",
ylim = c(0, 100),
main = "Pharm D - Year 5 Grades (Theory and Practical)")
})
# Placeholder plot for Class XII (4 modules)
output$Class12Plot <- renderPlot({
barplot(c(90, 92, 88, 94),
names.arg = c("Module 1", "Module 2", "Module 3", "Module 4"),
col = "lightcoral",
ylim = c(0, 100),
main = "Class XII Grades (Theory and Practical)")
})
}
# Run the application
shinyApp(ui = ui, server = server)
# Load the required libraries
library(shiny)
# Example dataset created from your PharmD marksheet
pharmd_grades <- list(
Year1 = data.frame(
Module = c("Human Anatomy and Physiology", "Pharmaceutics", "Medicinal Biochemistry",
"Pharmaceutical Organic Chemistry", "Pharmaceutical Inorganic Chemistry",
"Pathophysiology", "Pharmaceutical Microbiology"),
Marks = c(174, 156, 150, 175, 175, 166, 168)
),
Year2 = data.frame(
Module = c("Pharmacognosy and Phyto Pharmaceuticals", "Pharmacology-I", "Community Pharmacy",
"Pharmacotherapeutics-I"),
Marks = c(176, 159, 174, 183)
),
Year3 = data.frame(
Module = c("Pharmacology-II", "Pharmaceutical Analysis", "Pharmacotherapeutics-II",
"Pharmaceutical Jurisprudence", "Medicinal Chemistry", "Pharmaceutical Formulations"),
Marks = c(173, 158, 165, 168, 160, 160)
),
Year4 = data.frame(
Module = c("Pharmacotherapeutics-III", "Hospital Pharmacy", "Clinical Pharmacy",
"Biostatistics and Research Methodology", "Biopharmaceutics and Pharmacokinetics"),
Marks = c(169, 160, 173, 81, 81)
),
Year5 = data.frame(
Module = c("Clinical Toxicology", "Clinical Research", "Pharmacoepidemiology and Pharmacoeconomics",
"Clinical Pharmacokinetics & Pharmacotherapeutic Drug Monitoring", "Clerkship",
"Project Work"),
Marks = c(83, 96, 96, 94, 94, 85)
)
)
# Define UI
ui <- fluidPage(
# Title for the app
titlePanel("Education Grades"),
# Create a fluidRow for each section of the app
fluidRow(
# MSc DDT Section
column(2, strong("MSc DDT")),
column(10,
h4("A bar chart for different modules. I have 5 modules. Grades for each individual module out of 4.5"),
plotOutput("MScPlot")  # Placeholder for MSc grades chart
)
),
hr(),  # Horizontal line
fluidRow(
# Pharm D Section
column(2, strong("Pharm D")),
column(10,
# Toggle for Year selection (1 to 5)
tabsetPanel(
tabPanel("Year 1", plotOutput("PharmDYear1Plot")),
tabPanel("Year 2", plotOutput("PharmDYear2Plot")),
tabPanel("Year 3", plotOutput("PharmDYear3Plot")),
tabPanel("Year 4", plotOutput("PharmDYear4Plot")),
tabPanel("Year 5", plotOutput("PharmDYear5Plot"))
),
h4("Toggle changes the grades and module names in this section. Each year has 4 modules, and I need a bar chart for each module with theory and practical groups.")
)
),
hr(),  # Horizontal line
fluidRow(
# Class XII Section
column(2, strong("Class XII")),
column(10,
h4("Each year has 4 modules and I need a bar chart for each module with theory and practical groups"),
plotOutput("Class12Plot")  # Placeholder for Class XII grades chart
)
)
)
# Define server logic
server <- function(input, output) {
# Placeholder plot for MSc DDT (5 modules)
output$MScPlot <- renderPlot({
# Replace this with your actual grades data later
barplot(c(3.5, 4.0, 3.8, 4.2, 4.1),
names.arg = paste("Module", 1:5),
col = "lightblue",
ylim = c(0, 4.5),
main = "MSc DDT Grades (Out of 4.5)")
})
# Bar plots for PharmD Years
output$PharmDYear1Plot <- renderPlot({
barplot(pharmd_grades$Year1$Marks,
names.arg = pharmd_grades$Year1$Module,
col = "lightgreen",
ylim = c(0, 200),
las = 2,
main = "Pharm D - Year 1 Grades")
})
output$PharmDYear2Plot <- renderPlot({
barplot(pharmd_grades$Year2$Marks,
names.arg = pharmd_grades$Year2$Module,
col = "lightgreen",
ylim = c(0, 200),
las = 2,
main = "Pharm D - Year 2 Grades")
})
output$PharmDYear3Plot <- renderPlot({
barplot(pharmd_grades$Year3$Marks,
names.arg = pharmd_grades$Year3$Module,
col = "lightgreen",
ylim = c(0, 200),
las = 2,
main = "Pharm D - Year 3 Grades")
})
output$PharmDYear4Plot <- renderPlot({
barplot(pharmd_grades$Year4$Marks,
names.arg = pharmd_grades$Year4$Module,
col = "lightgreen",
ylim = c(0, 200),
las = 2,
main = "Pharm D - Year 4 Grades")
})
output$PharmDYear5Plot <- renderPlot({
barplot(pharmd_grades$Year5$Marks,
names.arg = pharmd_grades$Year5$Module,
col = "lightgreen",
ylim = c(0, 200),
las = 2,
main = "Pharm D - Year 5 Grades")
})
# Placeholder plot for Class XII (4 modules)
output$Class12Plot <- renderPlot({
barplot(c(90, 92, 88, 94),
names.arg = c("Module 1", "Module 2", "Module 3", "Module 4"),
col = "lightcoral",
ylim = c(0, 100),
main = "Class XII Grades (Theory and Practical)")
})
}
# Run the application
shinyApp(ui = ui, server = server)
# Load the required libraries
library(shiny)
# Example dataset created from your PharmD marksheet
pharmd_grades <- list(
Year1 = data.frame(
Module = c("Human Anatomy and Physiology", "Pharmaceutics", "Medicinal Biochemistry",
"Pharmaceutical Organic Chemistry", "Pharmaceutical Inorganic Chemistry",
"Pathophysiology", "Pharmaceutical Microbiology"),
Marks = c(174, 156, 150, 175, 175, 166, 168)
),
Year2 = data.frame(
Module = c("Pharmacognosy and Phyto Pharmaceuticals", "Pharmacology-I", "Community Pharmacy",
"Pharmacotherapeutics-I"),
Marks = c(176, 159, 174, 183)
),
Year3 = data.frame(
Module = c("Pharmacology-II", "Pharmaceutical Analysis", "Pharmacotherapeutics-II",
"Pharmaceutical Jurisprudence", "Medicinal Chemistry", "Pharmaceutical Formulations"),
Marks = c(173, 158, 165, 168, 160, 160)
),
Year4 = data.frame(
Module = c("Pharmacotherapeutics-III", "Hospital Pharmacy", "Clinical Pharmacy",
"Biostatistics and Research Methodology", "Biopharmaceutics and Pharmacokinetics"),
Marks = c(169, 160, 173, 81, 81)
),
Year5 = data.frame(
Module = c("Clinical Toxicology", "Clinical Research", "Pharmacoepidemiology and Pharmacoeconomics",
"Clinical Pharmacokinetics & Pharmacotherapeutic Drug Monitoring", "Clerkship",
"Project Work"),
Marks = c(83, 96, 96, 94, 94, 85)
)
)
# Define UI
ui <- fluidPage(
# Title for the app
titlePanel("Education Grades"),
# Create a fluidRow for each section of the app
fluidRow(
# MSc DDT Section
column(2, strong("MSc DDT")),
column(10,
h4("A bar chart for different modules. I have 5 modules. Grades for each individual module out of 4.5"),
plotOutput("MScPlot")  # Placeholder for MSc grades chart
)
),
hr(),  # Horizontal line
fluidRow(
# Pharm D Section
column(2, strong("Pharm D")),
column(10,
# Toggle for Year selection (1 to 5)
tabsetPanel(
tabPanel("Year 1", plotOutput("PharmDYear1Plot")),
tabPanel("Year 2", plotOutput("PharmDYear2Plot")),
tabPanel("Year 3", plotOutput("PharmDYear3Plot")),
tabPanel("Year 4", plotOutput("PharmDYear4Plot")),
tabPanel("Year 5", plotOutput("PharmDYear5Plot"))
),
h4("Toggle changes the grades and module names in this section. Each year has 4 modules, and I need a bar chart for each module with theory and practical groups.")
)
),
hr(),  # Horizontal line
fluidRow(
# Class XII Section
column(2, strong("Class XII")),
column(10,
h4("Each year has 4 modules and I need a bar chart for each module with theory and practical groups"),
plotOutput("Class12Plot")  # Placeholder for Class XII grades chart
)
)
)
# Define server logic
server <- function(input, output) {
# Placeholder plot for MSc DDT (5 modules)
output$MScPlot <- renderPlot({
# Replace this with your actual grades data later
barplot(c(3.5, 4.0, 3.8, 4.2, 4.1),
names.arg = paste("Module", 1:5),
col = "lightblue",
ylim = c(0, 4.5),
main = "MSc DDT Grades (Out of 4.5)")
})
# Bar plots for PharmD Years
output$PharmDYear1Plot <- renderPlot({
barplot(pharmd_grades$Year1$Marks,
names.arg = pharmd_grades$Year1$Module,
col = "lightgreen",
ylim = c(0, 200),
main = "Pharm D - Year 1 Grades")
})
output$PharmDYear2Plot <- renderPlot({
barplot(pharmd_grades$Year2$Marks,
names.arg = pharmd_grades$Year2$Module,
col = "lightgreen",
ylim = c(0, 200),
main = "Pharm D - Year 2 Grades")
})
output$PharmDYear3Plot <- renderPlot({
barplot(pharmd_grades$Year3$Marks,
names.arg = pharmd_grades$Year3$Module,
col = "lightgreen",
ylim = c(0, 200),
main = "Pharm D - Year 3 Grades")
})
output$PharmDYear4Plot <- renderPlot({
barplot(pharmd_grades$Year4$Marks,
names.arg = pharmd_grades$Year4$Module,
col = "lightgreen",
ylim = c(0, 200),
las = 2,
main = "Pharm D - Year 4 Grades")
})
output$PharmDYear5Plot <- renderPlot({
barplot(pharmd_grades$Year5$Marks,
names.arg = pharmd_grades$Year5$Module,
col = "lightgreen",
ylim = c(0, 200),
main = "Pharm D - Year 5 Grades")
})
# Placeholder plot for Class XII (4 modules)
output$Class12Plot <- renderPlot({
barplot(c(90, 92, 88, 94),
names.arg = c("Module 1", "Module 2", "Module 3", "Module 4"),
col = "lightcoral",
ylim = c(0, 100),
main = "Class XII Grades (Theory and Practical)")
})
}
# Run the application
shinyApp(ui = ui, server = server)
View(pharmd_grades)
View(pharmd_grades[["Year1"]])
View(pharmd_grades[["Year2"]])
View(pharmd_grades[["Year3"]])
View(pharmd_grades[["Year4"]])
View(pharmd_grades[["Year5"]])
library(tidyverse)
read.csv("C:\Users\s1801\Downloads\pharmd.csv")
read.csv(C:\Users\s1801\Downloads\pharmd.csv)
read.csv(C:/Users/s1801/Downloads/pharmd.csv)
read.csv("C:/Users/s1801/Downloads/pharmd.csv")
pharmd_marks <- read.csv("C:/Users/s1801/Downloads/pharmd.csv") |> janitor::clean_names()
pharmd_marks |>
mutate(percentage = (marks/out_of)*100)
pharmd_marks |>
mutate(percentage = (marks/out_of)*100,
year = as.factor()) |>
group_by(year)
pharmd_marks |>
mutate(percentage = (marks/out_of)*100,
year = as.factor(year)) |>
group_by(year)
yearly <- pharmd_marks |>
mutate(percentage = (marks/out_of)*100,
year = as.factor(year)) |>
group_by(year) |>
mean(percentage)
pharmd_marks |>
mutate(percentage = (marks/out_of)*100,
year = as.factor(year)) |>
group_by(year)
pharmd_marks |>
mutate(percentage = as.numeric((marks/out_of)*100),
year = as.factor(year)) |>
group_by(year)
yearly <- pharmd_marks |>
mutate(percentage = (marks/out_of)*100,
year = as.factor(year)) |>
group_by(year) |>
mean(percentage)
yearly <- pharmd_marks |>
mutate(percentage = (marks/out_of)*100,
year = as.factor(year)) |>
group_by(year) |>
mutate(
year = c(1:5),
perc = mean(percentage)
)
yearly <- pharmd_marks |>
mutate(percentage = (marks/out_of)*100,
year = as.factor(year)) |>
group_by(year) |>
mutate(
year = c(1:6),
perc = mean(percentage)
)
yearly <- pharmd_marks |>
mutate(percentage = (marks/out_of)*100,
year = as.factor(year)) |>
group_by(year) |>
mutate(
year = year,
perc = mean(percentage)
)
View(yearly)
overall <- mean(yearly$percentage)
pharmd_grades[["Year2"]]
install.packages("table1")
library(table1)
table1(pharmd_marks)
table1(~marks| year, pharmd_marks)
table1(~marks + perce| year, pharmd_marks)
table1(~marks + perc| year, yearly)
